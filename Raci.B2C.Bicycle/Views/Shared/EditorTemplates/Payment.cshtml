@model Raci.B2C.Bicycle.Models.Braintree

@{
    string cardnumberField = "card-number";
    string cvvFIeld = "cvv";
    string expirationDateField= "expiration-date";
}

<script src="https://js.braintreegateway.com/v2/braintree.js"></script>

<script> // todo: Typescriptify this.

    var clientToken = "@Model.ClientToken";

    function removeValidationErrorFromContainer(container) {
        $(container).find(".field-validation-error").remove();
    }

    function addValidationErrorToContainer(container,message) {

        var validationControl = $(container).find(".field-validation-error");

        if (validationControl.length === 0) {
            validationControl = $("body").find(".field-validation-error:last").clone();
            validationControl.css("display", "inline-block");
            $(container).append(validationControl);
        }

        validationControl.text(message);
    }

    function setCardType(type) {
        $("#@cardnumberField").siblings("#payment-method").removeClass();
        $("#@cardnumberField").siblings("#payment-method").addClass("payment-method " + type);
    }


    function showHostedFieldSuccess(container) {
        var field = $(container).addClass("large-10");
        field.siblings("#tick").show();
    }

    function hideHostedFieldSuccess(field) {
        field.removeClass("large-10");
        field.siblings("#tick").hide();
    }

    function onHostedFieldFocus(event) { }
    function onHostedFieldBlur(event) { }

    function onHostedFieldStateChanged(event) {
        var field = $("#" + event.target.container.id);

        if (event.isValid) {
            showHostedFieldSuccess(field);
            removeValidationErrorFromContainer($(field.parent()));
        }

        if (event.isPotentiallyValid && !event.isValid) {
            hideHostedFieldSuccess(field);
            //removeValidationErrorFromContainer($(field.parent()));
        }

        if (!event.isValid && !event.isPotentiallyValid && !event.isEmpty) {
            hideHostedFieldSuccess(field);
           
            addValidationErrorToContainer(field.parent(), "Please provide a valid " + $('label[for=' + field.attr("id") + ']').text().toLowerCase());
        }

        if (event.isEmpty) {
            hideHostedFieldSuccess(field);
            //removeValidationErrorFromContainer($(field.parent()));
        }

        if (event.card) {
            console.log(event.card.niceType);
            setCardType(extractClassName(event.card.niceType));
        }
    }

    function extractClassName(cardType) {
        var result = cardType.toLowerCase();
        return result;
    }

    function onFieldEvent(event) {
        if (event.type === "focus") {
            onHostedFieldFocus(event);
        } else if (event.type === "blur") {
            onHostedFieldBlur(event);
        } else if (event.type === "fieldStateChange") {
            onHostedFieldStateChanged(event);
        }
    }

    function onPaymentMethodReceived(object) {
        $("#payment_method_nonce").val(object.nonce);
        pageController.submitForm($('#form0'), 'SubmitAction', 'Submit');
    }

    function onReady(ready) {
        removeSubmitBindings();
    }


    function onError(error) {

        // todo refactor this, its quick and dirty.

        
            if (error.details === undefined) {
                error["details"] = {}
                error.details["invalidFieldKeys"] = ["cvv","number","expirationDate"];
            }

            for (var item in error.details.invalidFieldKeys) {
                var field = error.details.invalidFieldKeys[item];
                var jfield;
                var message = "Please enter valid card details.";

                if (field === "number") {
                    jField = $("#@cardnumberField");
                    message = "Please provide a valid credit card number";
                }
                else if (field === "cvv") {
                    jField = $("#@cvvFIeld");
                    message = "Please provide a valid CVV";
                }
                else if (field === "expirationDate") {
                    jField = $("#@expirationDateField");
                    message = "Please provide a valid expiration date";
                }
                addValidationErrorToContainer(jField.parent(), message);
            }
        

        pageController.unblockUi();
        
    }


    /*
     * Remove document submit events, they are interfering with braintree (on submit only) nonce retrieval *(&!*&^!*(*!!!!!!!!
     */
    function removeSubmitBindings() {
        $(document).off("submit");
        $('[id$="_submit-action"]').off("submit");
        $('[id$="_submit-action"]').off("click");

        $('[id$="_submit-action"]').off("click.inprogress").on("click.inprogress", function() {
            pageController.blockUi();
        });
    }
        
    var braintreeConfig = {
        id: "form0",
        onPaymentMethodReceived: onPaymentMethodReceived,
        onReady: onReady,
        onError: onError,
        hostedFields: {
            styles: {},
            number: {
                selector: "#card-number",
                placeholder: "Card Number"
            },
            cvv: {
                selector: "#cvv",
                placeholder: "CVV"
            },
            expirationDate: {
                selector: "#expiration-date",
                placeholder: "Expiration Date MM/YY"
            },
            onFieldEvent:onFieldEvent
        }
    }

    // braintree config help: https://developers.braintreepayments.com/javascript+dotnet/guides/hosted-fields/configuration
    braintree.setup(clientToken, "custom",braintreeConfig );

</script>

    @Html.HiddenFor(m=>m.payment_method_nonce,new {id="payment_method_nonce"})

@if (Model.PaymentFailed)
{
    <div class="field-validation-error row">
        <div class=" large-12 columns">
            <span class="field-validation-error">
                <p>
                    The payment cannot complete, please check your payment details and try again.
                </p>
                <p>
                    If the problem persists please try again later.
                </p>
                </span>
        </div>
    </div>

}


    @QuestionAnswer(@cardnumberField, "Card Number")
    @QuestionAnswer(@cvvFIeld, "CVV")
    @QuestionAnswer(@expirationDateField, "Expiration Date")



@Authorisation()
<span class="field-validation-error" style="display:none"></span>

@helper Authorisation() {
<div class="row questionSetContainer">
    <div class="row questionContainer">
        <div id="Authorisation" class="info-box standard showQuestion">
            <span class="body-text-heading">Your agreement</span>
            <br />
            <p>
                Please refer to the <a id="pds-url" class="link" href="http://rac.com.au/insurance/product-disclosure-statements/bicycle-insurance-disclosure" target="_newtab">Product Disclosure Statement</a> to ensure that the product is suitable for your needs. We have only provided general advice and have not taken your personal circumstances into consideration.
            </p>
            <p>
                By purchasing this insurance you agree to RAC Insurance’s Terms and Conditions which comprise the Combined Product Disclosure Statement and Financial Services Guide and our Privacy Policy which have been made available for you to view here.
            </p>

        </div>
    </div>
</div>
}

@helper QuestionAnswer(string id, string label){
<div class=" row questionSetContainer">
    <div class="row questionContainer" data-wrapper-for="">
        <div class="question question-label large-4 columns">
            <div>
                <label for="@id">@label</label>
            </div>
        </div>
        <div class="answer answer-field large-4 columns">
            <div id="@id"></div>
            <i id="tick" class="tick" style="display: none;"> </i>
            <div  id="payment-method"></div>
        </div>
    </div>
</div>
}
