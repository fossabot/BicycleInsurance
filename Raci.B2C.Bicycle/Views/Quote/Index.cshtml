@using Raci.B2C.Web.Mvc
@using Raci.B2C.Web.Mvc.PageExtensions

@model Raci.B2C.Bicycle.Models.BicycleQuote

@{
    ViewBag.Title = "Review";
    ViewBag.MarketingRailStyle = "quote-marketing";
    ViewBag.ActiveStepNumber = 2;

    Layout = Request.IsAjaxRequest() ? null : (ViewEngines.Engines.FindView(this.ViewContext.Controller.ControllerContext, "_BikeQuoteMaster", "").View as RazorView)?.ViewPath;

    string selectedAccordion = (string)ViewData["selectedAccordion"];

    Dictionary<string, object> formAttributes = new Dictionary<string, object>();
    formAttributes["class"] = "insuranceForm questionForm formTop";
    formAttributes["data-update-isselected-url"] = Url.Action("UpdateSelectedProduct");
    formAttributes["data-update-premium-url"] = Url.Action("UpdatePremium");
}

@if (Html.HasModelError())
{
    @Html.ValidationSummary(true)
}

@using (Ajax.BeginForm(LocalMVC.Quote.Index(), new AjaxOptions() { OnSuccess = "pageController.ajaxSubmitSuccess" }, formAttributes))
{
    @Html.AntiForgeryToken()
    @Html.AntiBotCheck()

    <div class="row accordion" data-selected-accordion="@selectedAccordion">
        <div class="accordion-heading loading" data-accordion-id="@ViewData.TemplateInfo.GetFullHtmlFieldId(Html.StringExpressionFor(m => m.Question.BikeDetails))">
            <div class="text label2">Quote</div>
        </div>
        <div class="accordion-panel no-gap loading">
            <br class="clear" />

            <div id="productTabStrip" data-role="tabstrip" class="tab-strip">
                <ul>
                    @for (int i = 0; i < Model.Quote.Options.Count; i++)
                    {
                        var tabId = Model.Quote.Options[i].Code.FormatAsHtmlId();
                        if (Model.Quote.Options[i].IsSelected)
                        {
                            <li id="@tabId" class="k-state-active">
                                <div class="cover-text">
                                    @Model.Quote.Options[i].Description<br />
                                </div>
                                <div class="cover-price show-for-medium-up">@Model.Quote.Options[i].FormattedCurrencyAnnualPremium</div>
                            </li>
                        }
                        else
                        {
                            <li id="@tabId">
                                <div class="cover-text">
                                    @Model.Quote.Options[i].Description<br />
                                </div>
                                <div class="cover-price show-for-medium-up">
                                    <img src="~/dist/images/loading-animation3.gif" />
                                </div>
                            </li>
                        }
                    }
                </ul>

                @for (int i = 0; i < Model.Quote.Options.Count; i++)
                {
                    if (Model.Quote.Options[i].IsSelected)
                    {
                        ViewBag.Index = i;
                        <div class="row bordered premium-container">
                            @Html.Partial("PremiumContainer", Model)
                        </div>
                    }
                    else
                    {
                        <div class="row bordered premium-container">
                            @Html.HiddenFor(x => x.Quote.Options[i].IsSelected)
                        </div>
                    }
                }
            </div>

            <div id="fine-print-section">

                @Html.Partial("QuoteButtons", Model)

                <div class="mobile-marketing-area">
                </div>

                <div class="row summary-separator">
                    <div id="excess-container" class="large-12 columns">
                        @Html.Content("BicycleQuote.Quote.ExcessDetails")
                    </div>
                </div>

                <div class="row summary-separator">
                    <div id="info-container" class="large-12 columns">
                        @Html.Content("BicycleQuote.Quote.ImportantQuoteInformation")
                    </div>
                </div>

                <div class="row summary-separator">
                    <div id="pds-container" class="large-12 columns">
                        @Html.Content("BicycleQuote.Quote.PDSInformation")
                    </div>
                </div>

                <div id="inline-productmessage-section"></div>
            </div>

            <div class="row">
                <div id="navigation" class="large-12 column">
                    @AccordionControlHelper.BuyButton("Buy online")
                </div>
            </div>

            <div id="emailConfirmationContainer" style="display: none;">
            </div>
        </div>
    </div>
}

@section ScriptIncludes {
    <script>
        var pageController = new B2C.QuotePageController();
        pageController.init();
    </script>
}