@model Raci.B2C.Web.Models.Common.AddressData

@using System.Web.Mvc
@using System.Web.Mvc.Html
@using Raci.B2C.Web.Mvc
@using Raci.B2C.Web.Mvc.Dependency
@using Raci.B2C.Web.Mvc.PageExtensions

@if (Html.IsIncludeField(m => m))
{
    Question question = Html.PeekQuestionContainer().CurrentQuestion;

    if (question != null)
    {
        question.ErrorsHandled = true;
    }
    
    EditorParameters editorParameters = Html.ViewData.GetEditorParameters();

    string controlId = Html.ViewData.TemplateInfo.GetFullHtmlFieldId("");
    //
    // We give the data-url the control id to all multiple versions on the same page
    // to fetch data at the same time because the ajax framework will abort them id they 
    // have the same URL.
    //
    <div id="@controlId" 
         class="mailing-address questionContainer" 
         data-role="mailing-address" 
         data-url="@Url.Action(MVC.Address.FindMailingAddress())?controlId=@controlId"
         data-full-address="false" 
         @Html.GetDependencyAttributes("", DependencyStartupScriptType.Other)>
        
        @Html.HiddenFor(m => m.AddressDescription)
        @Html.HiddenFor(m => m.AddressMoniker)

        <div class="row">
            <div class="question question-label large-4 columns">
                <div>
                    @Html.SimpleQuestionLabelFor(m => m)
                    @Html.HelpFor(m => m)
                </div>
            </div>
            <div class="answer answer-field large-4 columns left">
                @MailingAddressControl()
            </div>
        </div>
        
        <div class="row matchingAddresses">
        </div>
        
        <div class="row matchingAddressesInfo">
            <div class="large-offset-4 large-8 columns small-margin-top info"></div>
        </div>

        <div class="addressErrors">@Html.ValidationMessageRaciFor2(m => m)</div>
        
        <script type="text/x-kendo-template" class="matchingAddressesTemplate">
            <div class="large-offset-4 large-8 columns">Please select your mailing address <i class="icon-chevron-down"></i></div>

            <div class="large-offset-4 large-8 columns">
                <table class="address-find-table">
                    <tbody>
                        # for (var i = 0; i < data.AddressList.length; i++) { #
                            <tr data-id="#= data.AddressList[i].Moniker #" data-description="#= data.AddressList[i].DisplayAddress #  #= data.AddressList[i].Postcode #">
                                <td class="show-for-medium-up"><input name="selectedAddressCheckBox" type="checkbox" value="#= data.AddressList[i].Moniker #"/></td>
                                <td>#= data.AddressList[i].DisplayAddress # #= data.AddressList[i].Postcode #</td>
                            </tr>
                        # } #
                    </tbody>   
                </table>
            </div>
        </script>
        
        <script type="text/x-kendo-template" class="selectedAddressTemplate">
            <div class="selectedAddressDescription">
                <div class="row">
                    <div class="small-1 show-for-medium-up collapse-left collapse-right columns text-center">
                        <i class="icon-check"></i>
                    </div>
                    <div class="small-11 columns">
                        #= description #
                    </div>
                    <div class="small-1 show-for-small collapse-left collapse-right columns text-center">
                        <i class="icon-check"></i>
                    </div>
                </div>
            </div>
            <div class="row collapse">
                <div class="small-12 change-link columns">
                    <a class="link selectChangeAddress" href="javascript:;">Change selected address</a>
                </div>
            </div>
        </script>  
    </div>
}    

@helper MailingAddressControl()
{
    Dictionary<string, object> streetParameters = new Dictionary<string, object>();
    Dictionary<string, object> suburbParameters = new Dictionary<string, object>();

    streetParameters["data-role"] = "textbox";
    streetParameters["style"] = "width:100%;";
    streetParameters["placeholder"] = "e.g. 1/10 Sample St";

    suburbParameters["data-role"] = "textbox";
    suburbParameters["style"] = "width:100%;";
    suburbParameters["placeholder"] = "Enter your postcode or suburb";

    <div class="mailing-address-input">
        @Html.TextBoxFor( m => m.Street, streetParameters )
        @Html.TextBoxFor( m => m.Suburb, suburbParameters )
        <button class="btn secondary find-address-button inProgressIndicator">
            <span class="btn-text">Verify your address</span>
            <span class="icon-symbol"> <i class="icon-search"></i></span>
        </button>
    </div>
    
    
    <div class="selectedAddress">
    </div>
}