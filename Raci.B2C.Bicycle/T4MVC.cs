// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4LocalMVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class LocalMVC
{
    public static Raci.B2C.Bicycle.Controllers.ConfirmationController Confirmation = new Raci.B2C.Bicycle.Controllers.T4MVC_ConfirmationController();
    public static Raci.B2C.Bicycle.Controllers.PaymentController Payment = new Raci.B2C.Bicycle.Controllers.T4MVC_PaymentController();
    public static Raci.B2C.Bicycle.Controllers.PolicyDetailController PolicyDetail = new Raci.B2C.Bicycle.Controllers.T4MVC_PolicyDetailController();
    public static Raci.B2C.Bicycle.Controllers.QuestionController Question = new Raci.B2C.Bicycle.Controllers.T4MVC_QuestionController();
    public static Raci.B2C.Bicycle.Controllers.QuoteController Quote = new Raci.B2C.Bicycle.Controllers.T4MVC_QuoteController();
    public static T4LocalMVC.HomeController Home = new T4LocalMVC.HomeController();
    public static T4LocalMVC.PlatformController Platform = new T4LocalMVC.PlatformController();
    public static T4LocalMVC.SharedController Shared = new T4LocalMVC.SharedController();
}

namespace T4LocalMVC
{
}

namespace T4LocalMVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_RedirectToRouteResult : System.Web.Mvc.RedirectToRouteResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_RedirectToRouteResult(string area, string controller, string action, string protocol = null): base(default(System.Web.Routing.RouteValueDictionary))
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string ai_0_15_0_build58334_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ai.0.15.0-build58334.min.js") ? Url("ai.0.15.0-build58334.min.js") : Url("ai.0.15.0-build58334.js");
        public static readonly string ai_0_15_0_build58334_min_js = Url("ai.0.15.0-build58334.min.js");
        public static readonly string BicyclePageController_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/BicyclePageController.min.js") ? Url("BicyclePageController.min.js") : Url("BicyclePageController.js");
        public static readonly string BrainTreePayment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/BrainTreePayment.min.js") ? Url("BrainTreePayment.min.js") : Url("BrainTreePayment.js");
        public static readonly string PaymentController_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PaymentController.min.js") ? Url("PaymentController.min.js") : Url("PaymentController.js");
        public static readonly string QuotePageController_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/QuotePageController.min.js") ? Url("QuotePageController.min.js") : Url("QuotePageController.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class typings {
            private const string URLPATH = "~/Scripts/typings";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string b2c_common_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/b2c-common.d.min.js") ? Url("b2c-common.d.min.js") : Url("b2c-common.d.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class b2cplatform {
                private const string URLPATH = "~/Scripts/typings/b2cplatform";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string B2CAccordion_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/B2CAccordion.d.min.js") ? Url("B2CAccordion.d.min.js") : Url("B2CAccordion.d.js");
                public static readonly string B2CCarousel_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/B2CCarousel.d.min.js") ? Url("B2CCarousel.d.min.js") : Url("B2CCarousel.d.js");
                public static readonly string CreditCardNumberControl_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CreditCardNumberControl.d.min.js") ? Url("CreditCardNumberControl.d.min.js") : Url("CreditCardNumberControl.d.js");
                public static readonly string DataLayerManager_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/DataLayerManager.d.min.js") ? Url("DataLayerManager.d.min.js") : Url("DataLayerManager.d.js");
                public static readonly string DatePicker_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/DatePicker.d.min.js") ? Url("DatePicker.d.min.js") : Url("DatePicker.d.js");
                public static readonly string DefaultPageController_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/DefaultPageController.d.min.js") ? Url("DefaultPageController.d.min.js") : Url("DefaultPageController.d.js");
                public static readonly string Dependency_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Dependency.d.min.js") ? Url("Dependency.d.min.js") : Url("Dependency.d.js");
                public static readonly string FormDialog_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/FormDialog.d.min.js") ? Url("FormDialog.d.min.js") : Url("FormDialog.d.js");
                public static readonly string Ijento_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Ijento.d.min.js") ? Url("Ijento.d.min.js") : Url("Ijento.d.js");
                public static readonly string kendo_all_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/kendo.all.d.min.js") ? Url("kendo.all.d.min.js") : Url("kendo.all.d.js");
                public static readonly string MailingAddressControl_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MailingAddressControl.d.min.js") ? Url("MailingAddressControl.d.min.js") : Url("MailingAddressControl.d.js");
                public static readonly string PageController_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PageController.d.min.js") ? Url("PageController.d.min.js") : Url("PageController.d.js");
                public static readonly string PaymentPageController_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PaymentPageController.d.min.js") ? Url("PaymentPageController.d.min.js") : Url("PaymentPageController.d.js");
                public static readonly string ProductTabStrip_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ProductTabStrip.d.min.js") ? Url("ProductTabStrip.d.min.js") : Url("ProductTabStrip.d.js");
                public static readonly string Select_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Select.d.min.js") ? Url("Select.d.min.js") : Url("Select.d.js");
                public static readonly string ServiceAvailabilityPageController_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ServiceAvailabilityPageController.d.min.js") ? Url("ServiceAvailabilityPageController.d.min.js") : Url("ServiceAvailabilityPageController.d.js");
                public static readonly string SuburbControl_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SuburbControl.d.min.js") ? Url("SuburbControl.d.min.js") : Url("SuburbControl.d.js");
                public static readonly string TextBox_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TextBox.d.min.js") ? Url("TextBox.d.min.js") : Url("TextBox.d.js");
                public static readonly string Util_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Util.d.min.js") ? Url("Util.d.min.js") : Url("Util.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery {
                private const string URLPATH = "~/Scripts/typings/jquery";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.d.min.js") ? Url("jquery.d.min.js") : Url("jquery.d.js");
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bicycle_payment_less = Url("bicycle-payment.less");
        public static readonly string bicycle_payment_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bicycle-payment.min.css") ? Url("bicycle-payment.min.css") : Url("bicycle-payment.css");
             
        public static readonly string Bicycle_premium_container_less = Url("Bicycle-premium-container.less");
        public static readonly string Bicycle_premium_container_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Bicycle-premium-container.min.css") ? Url("Bicycle-premium-container.min.css") : Url("Bicycle-premium-container.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Images {
            private const string URLPATH = "~/Content/Images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string question_mark_png = Url("question-mark.png");
            public static readonly string tick_icon_png = Url("tick-icon.png");
        }
    
        public static readonly string site_less = Url("site.less");
        public static readonly string site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/site.min.css") ? Url("site.min.css") : Url("site.css");
             
        public static readonly string site_min_css = Url("site.min.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class typings 
            {
                public static partial class b2cplatform 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class jquery 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string ai_0_15_0_build58334_js = "~/Scripts/ai.0.15.0-build58334.js"; 
                public const string ai_0_15_0_build58334_min_js = "~/Scripts/ai.0.15.0-build58334.min.js"; 
                public const string BrainTreePayment_js = "~/Scripts/BrainTreePayment.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class Images 
            {
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}


namespace Raci.B2C.Bicycle.Controllers
{
    public partial class ConfirmationController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ConfirmationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.RedirectToRouteResult RedirectToAction()
        {
            return new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RedirectToAction);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ConfirmationController Actions { get { return LocalMVC.Confirmation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Confirmation";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Confirmation";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string RedirectToAction = "RedirectToAction";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string RedirectToAction = "RedirectToAction";
        }


        static readonly ActionParamsClass_RedirectToAction s_params_RedirectToAction = new ActionParamsClass_RedirectToAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToAction RedirectToActionParams { get { return s_params_RedirectToAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToAction
        {
            public readonly string actionName = "actionName";
            public readonly string routeValues = "routeValues";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Confirmation = "Confirmation";
                public readonly string Index = "Index";
            }
            public readonly string Confirmation = "~/Views/Confirmation/Confirmation.xml";
            public readonly string Index = "~/Views/Confirmation/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ConfirmationController : Raci.B2C.Bicycle.Controllers.ConfirmationController
    {
        public T4MVC_ConfirmationController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void RedirectToActionOverride(T4MVC_System_Web_Mvc_RedirectToRouteResult callInfo, string actionName, object routeValues);

        [NonAction]
        public override System.Web.Mvc.RedirectToRouteResult RedirectToAction(string actionName, object routeValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RedirectToAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValues", routeValues);
            RedirectToActionOverride(callInfo, actionName, routeValues);
            return callInfo;
        }

    }
}

namespace Raci.B2C.Bicycle.Controllers
{
    public partial class PaymentController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PaymentController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Back()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.RedirectToRouteResult RedirectToAction()
        {
            return new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RedirectToAction);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PaymentController Actions { get { return LocalMVC.Payment; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Payment";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Payment";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Back = "Index";
            public readonly string RedirectToAction = "RedirectToAction";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Back = "Index";
            public const string RedirectToAction = "RedirectToAction";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string formValues = "formValues";
        }
        static readonly ActionParamsClass_Back s_params_Back = new ActionParamsClass_Back();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Back BackParams { get { return s_params_Back; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Back
        {
            public readonly string formValues = "formValues";
        }
        static readonly ActionParamsClass_RedirectToAction s_params_RedirectToAction = new ActionParamsClass_RedirectToAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToAction RedirectToActionParams { get { return s_params_RedirectToAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToAction
        {
            public readonly string actionName = "actionName";
            public readonly string routeValues = "routeValues";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
            }
            public readonly string Index = "~/Views/Payment/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PaymentController : Raci.B2C.Bicycle.Controllers.PaymentController
    {
        public T4MVC_PaymentController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection formValues);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Index(System.Web.Mvc.FormCollection formValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formValues", formValues);
            IndexOverride(callInfo, formValues);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void BackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection formValues);

        [NonAction]
        public override System.Web.Mvc.ActionResult Back(System.Web.Mvc.FormCollection formValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formValues", formValues);
            BackOverride(callInfo, formValues);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToActionOverride(T4MVC_System_Web_Mvc_RedirectToRouteResult callInfo, string actionName, object routeValues);

        [NonAction]
        public override System.Web.Mvc.RedirectToRouteResult RedirectToAction(string actionName, object routeValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RedirectToAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValues", routeValues);
            RedirectToActionOverride(callInfo, actionName, routeValues);
            return callInfo;
        }

    }
}

namespace Raci.B2C.Bicycle.Controllers
{
    public partial class PolicyDetailController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PolicyDetailController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Back()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.RedirectToRouteResult RedirectToAction()
        {
            return new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RedirectToAction);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PolicyDetailController Actions { get { return LocalMVC.PolicyDetail; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "PolicyDetail";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "PolicyDetail";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Back = "Index";
            public readonly string RedirectToAction = "RedirectToAction";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Back = "Index";
            public const string RedirectToAction = "RedirectToAction";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string formValues = "formValues";
        }
        static readonly ActionParamsClass_Back s_params_Back = new ActionParamsClass_Back();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Back BackParams { get { return s_params_Back; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Back
        {
            public readonly string formValues = "formValues";
        }
        static readonly ActionParamsClass_RedirectToAction s_params_RedirectToAction = new ActionParamsClass_RedirectToAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToAction RedirectToActionParams { get { return s_params_RedirectToAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToAction
        {
            public readonly string actionName = "actionName";
            public readonly string routeValues = "routeValues";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
            }
            public readonly string Index = "~/Views/PolicyDetail/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PolicyDetailController : Raci.B2C.Bicycle.Controllers.PolicyDetailController
    {
        public T4MVC_PolicyDetailController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection formValues);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Index(System.Web.Mvc.FormCollection formValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formValues", formValues);
            IndexOverride(callInfo, formValues);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void BackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection formValues);

        [NonAction]
        public override System.Web.Mvc.ActionResult Back(System.Web.Mvc.FormCollection formValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formValues", formValues);
            BackOverride(callInfo, formValues);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToActionOverride(T4MVC_System_Web_Mvc_RedirectToRouteResult callInfo, string actionName, object routeValues);

        [NonAction]
        public override System.Web.Mvc.RedirectToRouteResult RedirectToAction(string actionName, object routeValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RedirectToAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValues", routeValues);
            RedirectToActionOverride(callInfo, actionName, routeValues);
            return callInfo;
        }

    }
}

namespace Raci.B2C.Bicycle.Controllers
{
    public partial class QuestionController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected QuestionController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.RedirectToRouteResult RedirectToAction()
        {
            return new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RedirectToAction);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public QuestionController Actions { get { return LocalMVC.Question; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Question";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Question";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string RedirectToAction = "RedirectToAction";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string RedirectToAction = "RedirectToAction";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string formValues = "formValues";
        }
        static readonly ActionParamsClass_RedirectToAction s_params_RedirectToAction = new ActionParamsClass_RedirectToAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToAction RedirectToActionParams { get { return s_params_RedirectToAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToAction
        {
            public readonly string actionName = "actionName";
            public readonly string routeValues = "routeValues";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
            }
            public readonly string Index = "~/Views/Question/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_QuestionController : Raci.B2C.Bicycle.Controllers.QuestionController
    {
        public T4MVC_QuestionController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection formValues);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Index(System.Web.Mvc.FormCollection formValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formValues", formValues);
            IndexOverride(callInfo, formValues);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void RedirectToActionOverride(T4MVC_System_Web_Mvc_RedirectToRouteResult callInfo, string actionName, object routeValues);

        [NonAction]
        public override System.Web.Mvc.RedirectToRouteResult RedirectToAction(string actionName, object routeValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RedirectToAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValues", routeValues);
            RedirectToActionOverride(callInfo, actionName, routeValues);
            return callInfo;
        }

    }
}

namespace Raci.B2C.Bicycle.Controllers
{
    public partial class QuoteController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected QuoteController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> UpdateSelectedProduct()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateSelectedProduct);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> UpdatePremium()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePremium);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Back()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.RedirectToRouteResult RedirectToAction()
        {
            return new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RedirectToAction);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public QuoteController Actions { get { return LocalMVC.Quote; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Quote";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Quote";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string UpdateSelectedProduct = "UpdateSelectedProduct";
            public readonly string UpdatePremium = "UpdatePremium";
            public readonly string Back = "Index";
            public readonly string RedirectToAction = "RedirectToAction";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string UpdateSelectedProduct = "UpdateSelectedProduct";
            public const string UpdatePremium = "UpdatePremium";
            public const string Back = "Index";
            public const string RedirectToAction = "RedirectToAction";
        }


        static readonly ActionParamsClass_UpdateSelectedProduct s_params_UpdateSelectedProduct = new ActionParamsClass_UpdateSelectedProduct();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateSelectedProduct UpdateSelectedProductParams { get { return s_params_UpdateSelectedProduct; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateSelectedProduct
        {
            public readonly string formValues = "formValues";
        }
        static readonly ActionParamsClass_UpdatePremium s_params_UpdatePremium = new ActionParamsClass_UpdatePremium();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdatePremium UpdatePremiumParams { get { return s_params_UpdatePremium; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdatePremium
        {
            public readonly string formValues = "formValues";
        }
        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string formValues = "formValues";
        }
        static readonly ActionParamsClass_Back s_params_Back = new ActionParamsClass_Back();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Back BackParams { get { return s_params_Back; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Back
        {
            public readonly string formValues = "formValues";
        }
        static readonly ActionParamsClass_RedirectToAction s_params_RedirectToAction = new ActionParamsClass_RedirectToAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RedirectToAction RedirectToActionParams { get { return s_params_RedirectToAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RedirectToAction
        {
            public readonly string actionName = "actionName";
            public readonly string routeValues = "routeValues";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
                public readonly string PremiumContainer = "PremiumContainer";
                public readonly string QuoteButtons = "QuoteButtons";
            }
            public readonly string Index = "~/Views/Quote/Index.cshtml";
            public readonly string PremiumContainer = "~/Views/Quote/PremiumContainer.cshtml";
            public readonly string QuoteButtons = "~/Views/Quote/QuoteButtons.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_QuoteController : Raci.B2C.Bicycle.Controllers.QuoteController
    {
        public T4MVC_QuoteController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void UpdateSelectedProductOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection formValues);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> UpdateSelectedProduct(System.Web.Mvc.FormCollection formValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateSelectedProduct);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formValues", formValues);
            UpdateSelectedProductOverride(callInfo, formValues);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void UpdatePremiumOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection formValues);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> UpdatePremium(System.Web.Mvc.FormCollection formValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePremium);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formValues", formValues);
            UpdatePremiumOverride(callInfo, formValues);
            return System.Threading.Tasks.Task.FromResult(callInfo as ActionResult);
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection formValues);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(System.Web.Mvc.FormCollection formValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formValues", formValues);
            IndexOverride(callInfo, formValues);
            return callInfo;
        }

        [NonAction]
        partial void BackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection formValues);

        [NonAction]
        public override System.Web.Mvc.ActionResult Back(System.Web.Mvc.FormCollection formValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Back);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "formValues", formValues);
            BackOverride(callInfo, formValues);
            return callInfo;
        }

        [NonAction]
        partial void RedirectToActionOverride(T4MVC_System_Web_Mvc_RedirectToRouteResult callInfo, string actionName, object routeValues);

        [NonAction]
        public override System.Web.Mvc.RedirectToRouteResult RedirectToAction(string actionName, object routeValues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_RedirectToRouteResult(Area, Name, ActionNames.RedirectToAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "routeValues", routeValues);
            RedirectToActionOverride(callInfo, actionName, routeValues);
            return callInfo;
        }

    }
}

namespace T4LocalMVC
{
    public class HomeController
    {

        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

}

namespace T4LocalMVC
{
    public class PlatformController
    {

        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
            static readonly _ErrorClass s_Error = new _ErrorClass();
            public _ErrorClass Error { get { return s_Error; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _ErrorClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string _ExceptionStackTracePartial = "_ExceptionStackTracePartial";
                    public readonly string Index = "Index";
                    public readonly string PCMError = "PCMError";
                }
                public readonly string _ExceptionStackTracePartial = "~/Views/Platform/Error/_ExceptionStackTracePartial.cshtml";
                public readonly string Index = "~/Views/Platform/Error/Index.cshtml";
                public readonly string PCMError = "~/Views/Platform/Error/PCMError.cshtml";
            }
            static readonly _SharedClass s_Shared = new _SharedClass();
            public _SharedClass Shared { get { return s_Shared; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _SharedClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string _Quote_Master = "_Quote.Master";
                    public readonly string _Site = "_Site";
                    public readonly string _Site_Master_Basic = "_Site.Master.Basic";
                    public readonly string _Site_Master = "_Site.Master";
                    public readonly string Address = "Address";
                    public readonly string BankAccountRefundViewModel = "BankAccountRefundViewModel";
                    public readonly string CallbackRequest = "CallbackRequest";
                    public readonly string CreditCardPaymentViewModel = "CreditCardPaymentViewModel";
                    public readonly string CustomError = "CustomError";
                    public readonly string DetailsEditViewModel = "DetailsEditViewModel";
                    public readonly string DetailsViewModel = "DetailsViewModel";
                    public readonly string EndorsementErrorViewModel = "EndorsementErrorViewModel";
                    public readonly string EndorsementPriceChangeViewModel = "EndorsementPriceChangeViewModel";
                    public readonly string GeneralPCM = "GeneralPCM";
                    public readonly string GeneralText = "GeneralText";
                    public readonly string MarketingRail = "MarketingRail";
                    public readonly string ObjectNotFound = "ObjectNotFound";
                    public readonly string OtherPolicyViewModel = "OtherPolicyViewModel";
                    public readonly string PageHeading = "PageHeading";
                    public readonly string PolicyDocumentsViewModel = "PolicyDocumentsViewModel";
                    public readonly string PolicyPortfolioViewModel = "PolicyPortfolioViewModel";
                    public readonly string PolicyViewModel = "PolicyViewModel";
                    public readonly string QuoteReCalculatePromptDialog = "QuoteReCalculatePromptDialog";
                    public readonly string RepairerViewModel = "RepairerViewModel";
                    public readonly string ServiceStatusViewModel = "ServiceStatusViewModel";
                    public readonly string SessionTimeOut = "SessionTimeOut";
                }
                public readonly string _Quote_Master = "~/Views/Platform/Shared/_Quote.Master.cshtml";
                public readonly string _Site = "~/Views/Platform/Shared/_Site.cshtml";
                public readonly string _Site_Master_Basic = "~/Views/Platform/Shared/_Site.Master.Basic.cshtml";
                public readonly string _Site_Master = "~/Views/Platform/Shared/_Site.Master.cshtml";
                public readonly string Address = "~/Views/Platform/Shared/Address.xml";
                public readonly string BankAccountRefundViewModel = "~/Views/Platform/Shared/BankAccountRefundViewModel.xml";
                public readonly string CallbackRequest = "~/Views/Platform/Shared/CallbackRequest.xml";
                public readonly string CreditCardPaymentViewModel = "~/Views/Platform/Shared/CreditCardPaymentViewModel.xml";
                public readonly string CustomError = "~/Views/Platform/Shared/CustomError.cshtml";
                public readonly string DetailsEditViewModel = "~/Views/Platform/Shared/DetailsEditViewModel.xml";
                public readonly string DetailsViewModel = "~/Views/Platform/Shared/DetailsViewModel.xml";
                public readonly string EndorsementErrorViewModel = "~/Views/Platform/Shared/EndorsementErrorViewModel.xml";
                public readonly string EndorsementPriceChangeViewModel = "~/Views/Platform/Shared/EndorsementPriceChangeViewModel.xml";
                public readonly string GeneralPCM = "~/Views/Platform/Shared/GeneralPCM.xml";
                public readonly string GeneralText = "~/Views/Platform/Shared/GeneralText.xml";
                public readonly string MarketingRail = "~/Views/Platform/Shared/MarketingRail.cshtml";
                public readonly string ObjectNotFound = "~/Views/Platform/Shared/ObjectNotFound.cshtml";
                public readonly string OtherPolicyViewModel = "~/Views/Platform/Shared/OtherPolicyViewModel.xml";
                public readonly string PageHeading = "~/Views/Platform/Shared/PageHeading.cshtml";
                public readonly string PolicyDocumentsViewModel = "~/Views/Platform/Shared/PolicyDocumentsViewModel.xml";
                public readonly string PolicyPortfolioViewModel = "~/Views/Platform/Shared/PolicyPortfolioViewModel.xml";
                public readonly string PolicyViewModel = "~/Views/Platform/Shared/PolicyViewModel.xml";
                public readonly string QuoteReCalculatePromptDialog = "~/Views/Platform/Shared/QuoteReCalculatePromptDialog.cshtml";
                public readonly string RepairerViewModel = "~/Views/Platform/Shared/RepairerViewModel.xml";
                public readonly string ServiceStatusViewModel = "~/Views/Platform/Shared/ServiceStatusViewModel.xml";
                public readonly string SessionTimeOut = "~/Views/Platform/Shared/SessionTimeOut.cshtml";
                static readonly _DisplayTemplatesClass s_DisplayTemplates = new _DisplayTemplatesClass();
                public _DisplayTemplatesClass DisplayTemplates { get { return s_DisplayTemplates; } }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public partial class _DisplayTemplatesClass
                {
                    public readonly string CoverStartDate = "CoverStartDate";
                    public readonly string Currency = "Currency";
                    public readonly string DateData = "DateData";
                    public readonly string DateTime = "DateTime";
                    public readonly string Decimal = "Decimal";
                    public readonly string OtherPrice = "OtherPrice";
                    public readonly string QuestionlessDateData = "QuestionlessDateData";
                    public readonly string QuoteDiscounts = "QuoteDiscounts";
                    public readonly string RadioSet = "RadioSet";
                    public readonly string Select = "Select";
                    public readonly string SimpleDateData = "SimpleDateData";
                    public readonly string SimpleSelect = "SimpleSelect";
                    public readonly string SimpleString = "SimpleString";
                    public readonly string String = "String";
                    public readonly string StringArea = "StringArea";
                    public readonly string SuburbData = "SuburbData";
                    public readonly string SumInsuredData = "SumInsuredData";
                    public readonly string TelephoneData = "TelephoneData";
                    public readonly string TimeData = "TimeData";
                    public readonly string UndecoratedString = "UndecoratedString";
                }
                static readonly _EditorTemplatesClass s_EditorTemplates = new _EditorTemplatesClass();
                public _EditorTemplatesClass EditorTemplates { get { return s_EditorTemplates; } }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public partial class _EditorTemplatesClass
                {
                    public readonly string AddressData = "AddressData";
                    public readonly string Calendar = "Calendar";
                    public readonly string CheckBox = "CheckBox";
                    public readonly string CheckBoxList = "CheckBoxList";
                    public readonly string CoverStartDate = "CoverStartDate";
                    public readonly string CreditCardNumberViewModel = "CreditCardNumberViewModel";
                    public readonly string CreditCardViewModel = "CreditCardViewModel";
                    public readonly string DateData = "DateData";
                    public readonly string DateSelect = "DateSelect";
                    public readonly string DeclarationRadioSet = "DeclarationRadioSet";
                    public readonly string DirectDebitViewModel = "DirectDebitViewModel";
                    public readonly string ExcessData = "ExcessData";
                    public readonly string MailingAddress = "MailingAddress";
                    public readonly string MailingAddressFull = "MailingAddressFull";
                    public readonly string MonthYearSelectDateData = "MonthYearSelectDateData";
                    public readonly string Number = "Number";
                    public readonly string PreferredRepairerSuburb = "PreferredRepairerSuburb";
                    public readonly string QuestionlessDateData = "QuestionlessDateData";
                    public readonly string RadioSet = "RadioSet";
                    public readonly string Select = "Select";
                    public readonly string SimpleDateData = "SimpleDateData";
                    public readonly string SimpleRadioSet = "SimpleRadioSet";
                    public readonly string SimpleSelect = "SimpleSelect";
                    public readonly string SimpleString = "SimpleString";
                    public readonly string Street = "Street";
                    public readonly string String = "String";
                    public readonly string StringArea = "StringArea";
                    public readonly string SubQuestionSelect = "SubQuestionSelect";
                    public readonly string SubQuestionString = "SubQuestionString";
                    public readonly string SuburbData = "SuburbData";
                    public readonly string SuburbLookup = "SuburbLookup";
                    public readonly string SumInsuredData = "SumInsuredData";
                    public readonly string TelephoneData = "TelephoneData";
                    public readonly string TextDateData = "TextDateData";
                    public readonly string TimeData = "TimeData";
                    public readonly string VehicleRegistrationViewModel = "VehicleRegistrationViewModel";
                    public readonly string VehicleSelection = "VehicleSelection";
                    public readonly string VerificationValue = "VerificationValue";
                }
            }
        }
    }

}

namespace T4LocalMVC
{
    public class SharedController
    {

        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _BikeQuoteMaster = "_BikeQuoteMaster";
                public readonly string AnnualPremium = "AnnualPremium";
                public readonly string Common = "Common";
            }
            public readonly string _BikeQuoteMaster = "~/Views/Shared/_BikeQuoteMaster.cshtml";
            public readonly string AnnualPremium = "~/Views/Shared/AnnualPremium.cshtml";
            public readonly string Common = "~/Views/Shared/Common.xml";
            static readonly _DisplayTemplatesClass s_DisplayTemplates = new _DisplayTemplatesClass();
            public _DisplayTemplatesClass DisplayTemplates { get { return s_DisplayTemplates; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _DisplayTemplatesClass
            {
                public readonly string BicycleQuoteQuoteOption = "BicycleQuoteQuoteOption";
                public readonly string ConfirmationMarketing = "ConfirmationMarketing";
            }
            static readonly _EditorTemplatesClass s_EditorTemplates = new _EditorTemplatesClass();
            public _EditorTemplatesClass EditorTemplates { get { return s_EditorTemplates; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _EditorTemplatesClass
            {
                public readonly string BicycleQuoteQuoteOption = "BicycleQuoteQuoteOption";
                public readonly string Payment = "Payment";
            }
        }
    }

}




#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


